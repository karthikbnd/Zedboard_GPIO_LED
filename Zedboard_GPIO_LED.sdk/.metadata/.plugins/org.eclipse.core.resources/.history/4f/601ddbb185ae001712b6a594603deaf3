/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

/* Includes */
#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xgpio.h"
#include "xstatus.h"

/* Definitions */
#define GPIO_DEVICE_ID XPAR_AXI_GPIO_0_DEVICE_ID		/* GPIO Device that LEDs are connected to */
#define LED 0x0F										/* Initial LED Value XX0000XX */
#define LED_DELAY 100								/* Software delay length */
#define LED_CHANNEL	1									/* GPIO port for LEDs */
#define printf xil_printf								/* define to use printf as optimized for il_printf */

XGpio Gpio;												/* GPIO Device driver instance */
//void print(char *str);
int LEDOutput_Eample(void)
{
	volatile int Delay;
	int Status;
	int led = LED; 						/* hold current LED value */

	/* GPIO Deriver initialization */
	Status = XGpio_Initialize(&Gpio, GPIO_DEVICE_ID);
	if(Status != XST_SUCCESS){
		return XST_FAILURE;
	}

	/* Set LEDs direction to Output */
	XGpio_SetDataDirection(&Gpio, LED_CHANNEL, 0x00);

	/* Loop forever blinking LED */
	while(1){
		/* Write output to LEDs */
		XGpio_DiscreteWrite(&Gpio, LED_CHANNEL, led);

		/* Flip LEDs */
		led = ~led;

		/* Delay */
		for(Delay = 0; Delay < LED_DELAY; Delay++);
		printf("In While loop\r\n");
	}
	return XST_SUCCESS; /* should be unreachable */
}
int main()
{
    init_platform();

    int Status;

    Status = LEDOutput_Eample();
    if (Status != XST_SUCCESS){
    	printf("GPIO output to the LEDs failed!\r\n");
    }

    return 0;
}

